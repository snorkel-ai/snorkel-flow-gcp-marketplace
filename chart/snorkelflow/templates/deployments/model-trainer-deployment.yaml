apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    service: model-trainer
    project: {{ .Values.namespace }}
    {{- if .Values.gpu.enabled }}
    snorkel.ai/compute-type: gpu
    {{- else }}
    snorkel.ai/compute-type: cpu
    {{- end }}
  name: model-trainer
  namespace: {{ .Values.namespace }}
spec:
  strategy:
    type: Recreate
{{- if eq .Values.autoscaling.worker_autoscaling "1" }}
  replicas: 0
{{- else if .Values.services.modelTrainer.max_replicas }}
  replicas: {{ .Values.services.modelTrainer.max_replicas }}
{{- else }}
  replicas: 1
{{- end }}
  selector:
    matchLabels:
      service: model-trainer
      project: {{ .Values.namespace }}
  template:
    metadata:
      labels:
        always-pinned: "0"
        service: model-trainer
        project: {{ .Values.namespace }}
        {{- if .Values.gpu.enabled }}
        snorkel.ai/compute-type: gpu
        {{- else }}
        snorkel.ai/compute-type: cpu
        {{- end }}
    spec:
{{- if .Values.affinity.binPackAlwaysPinnedPods }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
{{- end }}
      imagePullSecrets:
        - name: regcred
      securityContext:
        runAsUser: 99
        fsGroup: 99
      {{- if .Values.gpu.enabled }}
      {{- if .Values.gpu.gpu_config.node_selectors }}
      nodeSelector:
        {{- range $key, $value := .Values.gpu.gpu_config.node_selectors }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
      {{- end }}
      {{- if .Values.gpu.gpu_config.tolerations }}
      tolerations:
      {{- range .Values.gpu.gpu_config.tolerations }}
      - effect: {{ .effect }}
        key: {{ .key }}
        operator: {{ .operator }}
        value: {{ .value | quote }}
      {{- end }}
    {{- end }}
    {{- end }}
{{- if .Values.services.jupyterhub.enabled }}
      serviceAccountName: snorkelflow-internal-k8s-rw-sa
{{- end }}
      containers:
        - env:
            - name: SERVICE_TYPE
              value: model-trainer
            - name: IS_GPU_ENABLED
              value: "1"
            - name: SNORKEL_FLOW_VERSION
              value: "{{ .Values.version }}"
            - name: NUM_WORKERS_TINY
              value: "0"
            - name: NUM_WORKERS_SMALL
              value: "0"
            - name: NUM_WORKERS_LARGE
              value: "0"
            - name: NUM_WORKERS_MODEL_SMALL
{{- if .Values.services.modelTrainer.env.NUM_WORKERS_MODEL_SMALL }}
              value: "{{ .Values.services.modelTrainer.env.NUM_WORKERS_MODEL_SMALL }}"
{{- else }}
              value: "4"
{{- end }}
            - name: NUM_WORKERS_MODEL_LARGE
              value: "1"
            - name: DASK_DISTRIBUTED__ADMIN__LOG_FORMAT
              value: "%(levelname)s %(asctime)s.%(msecs).03d %(processName)s %(threadName)s %(name)s %(filename)s:%(lineno)d %(message)s"
            - name: DASK_DISTRIBUTED__WORKER__PROFILE__INTERVAL
              value: "1d"
            - name: DASK_DISTRIBUTED__WORKER__PROFILE__CYCLE
              value: "1d"
            - name: ENABLE_ROUTINE_ANALYZE
              value: "False"
            - name: DB_MINCONN
              value: "9"
            - name: DB_MAXCONN
              value: "19"
{{- if eq .Values.autoscaling.worker_autoscaling "1" }}
            - name: POD_AUTOSCALING_ENABLED
              value: "1"
            - name: RAY_WORKER_REPLICA_DEFAULT_COUNT
              value: {{ .Values.services.rayWorker.max_replicas | quote }}
{{- else }}
            - name: POD_AUTOSCALING_ENABLED
              value: "0"
            - name: RAY_WORKER_REPLICA_DEFAULT_COUNT
              value: "2"
{{- end }}
            - name: ENABLE_IPV6
              value: "False"
            - name: ENABLE_PRETRAINED_MODEL_DIRECTORY
              value: "False"
            - name: LD_PRELOAD
              value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
            - name: MALLOC_CONF
              value: background_thread:true
            - name: MALLOC_MMAP_THRESHOLD_
              value: "16384"
            - name: SNORKELFLOW_MOUNT_DIR
              value: /data
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDIS_URL
              value: redis
            - name: MINIO_URL
              value: http://minio:9001
            - name: TELEGRAF_CADVISOR_URL
              value: telegraf:8186
            - name: TELEGRAF_URL
              value: http://telegraf:8125
            - name: TDM_CONN_STR
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: tdm_conn_str
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_access_key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_secret_key
          {{- if .Values.image.imageNames.engine }}
          image: {{ .Values.image.imageNames.engine }}
          {{- else if .Values.gpu.enabled }}
          image: snorkelai/engine:{{ .Values.version }}-cuda
          {{- else }}
          image: snorkelai/engine:{{ .Values.version }}
          {{- end }}
          name: model-trainer
          args:
            - worker
          ports: []
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/auth/jwt
              name: jwt-key-pub
            - mountPath: /dev/shm
              name: dshm
          resources:
{{- if .Values.services.modelTrainer.resources }}
{{ toYaml .Values.services.modelTrainer.resources | indent 12 }}
{{- else }}
            requests:
              memory: 64.0Gi
              cpu: "16.0"
              {{- if .Values.gpu.enabled }}
              nvidia.com/gpu: '1'
              {{- end }}
            limits:
              memory: 64.0Gi
              cpu: "16.0"
              {{- if .Values.gpu.enabled }}
              nvidia.com/gpu: '1'
              {{- end }}
{{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.namespace }}-data
        - name: jwt-key-pub
          secret:
            secretName: jwt-key-pub
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 10000Mi
